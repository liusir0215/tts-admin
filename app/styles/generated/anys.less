/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@data-name: data;
@data-x: 0px;
@data-y: 0px;
@data-offset-x: 0px;
@data-offset-y: 0px;
@data-width: 14px;
@data-height: 16px;
@data-total-width: 26px;
@data-total-height: 26px;
@data-image: 'anys.png';
@data: 0px 0px 0px 0px 14px 16px 26px 26px 'anys.png' data;
@down-name: down;
@down-x: 14px;
@down-y: 0px;
@down-offset-x: -14px;
@down-offset-y: 0px;
@down-width: 12px;
@down-height: 10px;
@down-total-width: 26px;
@down-total-height: 26px;
@down-image: 'anys.png';
@down: 14px 0px -14px 0px 12px 10px 26px 26px 'anys.png' down;
@s-se-down-name: s-se-down;
@s-se-down-x: 14px;
@s-se-down-y: 10px;
@s-se-down-offset-x: -14px;
@s-se-down-offset-y: -10px;
@s-se-down-width: 8px;
@s-se-down-height: 5px;
@s-se-down-total-width: 26px;
@s-se-down-total-height: 26px;
@s-se-down-image: 'anys.png';
@s-se-down: 14px 10px -14px -10px 8px 5px 26px 26px 'anys.png' s-se-down;
@se-down-name: se-down;
@se-down-x: 12px;
@se-down-y: 16px;
@se-down-offset-x: -12px;
@se-down-offset-y: -16px;
@se-down-width: 12px;
@se-down-height: 7px;
@se-down-total-width: 26px;
@se-down-total-height: 26px;
@se-down-image: 'anys.png';
@se-down: 12px 16px -12px -16px 12px 7px 26px 26px 'anys.png' se-down;
@up-name: up;
@up-x: 0px;
@up-y: 16px;
@up-offset-x: 0px;
@up-offset-y: -16px;
@up-width: 12px;
@up-height: 10px;
@up-total-width: 26px;
@up-total-height: 26px;
@up-image: 'anys.png';
@up: 0px 16px 0px -16px 12px 10px 26px 26px 'anys.png' up;
@spritesheet-width: 26px;
@spritesheet-height: 26px;
@spritesheet-image: 'anys.png';
@spritesheet-sprites: @data @down @s-se-down @se-down @up;
@spritesheet: 26px 26px 'anys.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: extract(@sprite, 10);
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
